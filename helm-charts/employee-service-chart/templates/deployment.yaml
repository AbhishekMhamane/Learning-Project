apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "employee-service-chart.fullname" . }}
  labels:
    {{- include "employee-service-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "employee-service-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "employee-service-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "employee-service-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                   name: {{ .Release.Name }}-configmap
                   key: database_host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                   name: {{ .Release.Name}}-configmap
                   key: database_name
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                   name: {{.Release.Name }}-db-secrets
                   key: mysql-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                   name: {{.Release.Name }}-db-secrets
                   key: mysql-password
            - name: KAFKA_SERVERS
              valueFrom:
                secretKeyRef:
                   name: {{.Release.Name}}-kafka-servers
                   key: kafka_servers
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
