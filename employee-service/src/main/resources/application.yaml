server: 
    port: 8081
    
spring:
    datasource:
#        url: jdbc:mysql://${DB_HOST}/${DB_NAME}
        url: jdbc:mysql://localhost:3307/employeedb
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 1234
#        username: ${DB_USERNAME}
#        password: ${DB_PASSWORD}
    jpa: 
        database-platform: org.hibernate.dialect.MySQL5Dialect
        hibernate: 
            ddl-auto: update
    kafka:
        boostrap-servers: localhost:9092
        # consumer:
        #     group-id: org_group
        #     auto-offset-reset: earliest
        #     key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        #     value-deserializer: org.apache.kafka.support.serializer.JsonDeserializer
        
org.topic.name: org_events
org.group-id: org_group
# dept.topic.name: dept_events        
# dept.group-id: dept_group


organizationService.url: http://localhost:8080/api/v1

#server.port: 8082
#spring.datasource.url: jdbc:mysql://localhost:3307/employeedb
#spring.datasource.username: root
#spring.datasource.password: 1234
#spring.jpa.database-platform: org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.ddl-auto: update
#
#spring.kafka.consumer.bootstrap-servers: localhost:9092
#spring.kafka.consumer.group-id: org-group
#spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
